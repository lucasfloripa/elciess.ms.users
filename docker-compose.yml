version: '3.8'
name: elciess_containers

services:
  mongodb:
    image: mongo:6.0
    container_name: localMongoDb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: elciess
      MONGO_INITDB_ROOT_PASSWORD: elciessPass
    volumes:
      - ./data:/data/db
    networks:
      - meu-local-network

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: localRabbitMQ
    restart: always
    ports:
      - "5672:5672"     # porta padrão do protocolo AMQP
      - "15672:15672"   # porta da interface de gerenciamento (UI)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    networks:
      - meu-local-network

  redis:
    image: redis:7-alpine
    container_name: localRedis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    networks:
      - meu-local-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis-commander: # NOVO SERVIÇO
    image: rediscommander/redis-commander:latest
    container_name: localRedisCommander
    restart: always
    environment:
      # Conecta ao serviço 'redis' na rede Docker
      REDIS_HOSTS: "local:redis:6379"
      # Se você tivesse senha: REDIS_PASSWORD: "sua_senha"
    ports:
      - "8081:8081" # Porta externa 8081, porta interna 8081
    networks:
      - meu-local-network
    depends_on:
      redis:
        condition: service_healthy
networks:
  meu-local-network:
    driver: bridge